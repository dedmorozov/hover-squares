{"version":3,"sources":["components/Header/Header.jsx","components/Field/Field.jsx","api/api.js","App.jsx","index.jsx"],"names":["Header","modesList","handleStart","isStarted","onChangeSelect","isModeSelected","easyMode","normalMode","hardMode","className","onChange","hidden","value","field","type","onClick","disabled","defaultProps","Field","squaresCount","useState","hovered","setHovered","getSquares","squaresAmount","squares","i","push","squareStyle","width","height","handleHover","e","target","style","parentElement","cellIndex","row","rowIndex","col","background","splice","findIndex","item","map","onMouseOver","onFocus","length","loadModes","a","fetch","respone","json","App","setModesList","setIsStarted","isLoaded","setIsLoaded","setSquaresCount","setIsModeSelected","useEffect","modes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b82797b.chunk.js","sourcesContent":["/* eslint-disable no-nested-ternary */\n/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Header.scss';\n\nexport const Header = ({\n  modesList,\n  handleStart,\n  isStarted,\n  onChangeSelect,\n  isModeSelected,\n}) => {\n  const { easyMode, normalMode, hardMode } = modesList;\n\n  return (\n    <header className=\"App__header header\">\n      <select className=\"header__select\" onChange={onChangeSelect}>\n        <option hidden>Pick mode</option>\n        <option value={easyMode.field}>\n          Easy mode\n        </option>\n        <option value={normalMode.field}>\n          Normal mode\n        </option>\n        <option value={hardMode.field}>\n          Hard mode\n        </option>\n      </select>\n\n      <button\n        className=\"header__button\"\n        type=\"button\"\n        onClick={handleStart}\n        disabled={!isModeSelected || isStarted}\n      >\n        {!isModeSelected ? 'Choose mode' : !isStarted ? 'Start' : 'Have fun'}\n      </button>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  modesList: PropTypes.objectOf(PropTypes.object),\n  handleStart: PropTypes.func.isRequired,\n  isStarted: PropTypes.bool.isRequired,\n  onChangeSelect: PropTypes.func.isRequired,\n  isModeSelected: PropTypes.bool.isRequired,\n};\n\nHeader.defaultProps = {\n  modesList: {},\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Field.scss';\n\nexport const Field = ({ squaresCount }) => {\n  const [hovered, setHovered] = useState([]);\n\n  const getSquares = (squaresAmount) => {\n    const squares = [];\n\n    for (let i = 1; i <= squaresAmount; i += 1) {\n      squares.push(i);\n    }\n\n    return squares;\n  };\n\n  const squareStyle = {\n    width: `calc(100% / ${squaresCount})`,\n    height: `calc(400px / ${squaresCount})`,\n  };\n\n  const handleHover = (e) => {\n    const {\n      style,\n      parentElement,\n      cellIndex,\n    } = e.target;\n\n    const row = parentElement.rowIndex + 1;\n    const col = cellIndex + 1;\n\n    if (style.background === '') {\n      style.background = 'blue';\n\n      setHovered([...hovered, [row, col]]);\n    } else {\n      style.background = '';\n\n      setHovered(hovered\n        .splice((hovered\n          .findIndex(item => item === [row, col]), 1)));\n    }\n  };\n\n  return (\n    <section className=\"App__Field Field\">\n      <table className=\"Field__squares\">\n        <tbody>\n          {getSquares(squaresCount).map(row => (\n            <tr key={row}>\n              {getSquares(squaresCount).map(col => (\n                <td\n                  key={`${row}, ${col}`}\n                  className=\"Field__square\"\n                  style={squareStyle}\n                  onMouseOver={handleHover}\n                  onFocus={handleHover}\n                >\n                  {' '}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {hovered.length > 0\n      && (\n        <ul className=\"Field__hovered hovered\">\n          {hovered.map(([row, col]) => (\n            <li key={[row, col]} className=\"hovered__item\">\n              {`row ${row} col ${col}`}\n            </li>\n          ))}\n        </ul>\n      )\n      }\n    </section>\n  );\n};\n\nField.propTypes = {\n  squaresCount: PropTypes.number.isRequired,\n};\n","const API_URL = 'http://demo1030918.mockable.io/';\n\nexport const loadModes = async() => {\n  const respone = await fetch(API_URL);\n\n  return respone.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport { Header } from './components/Header/Header';\nimport { Field } from './components/Field/Field';\nimport { loadModes } from './api/api';\nimport './App.scss';\n\nexport const App = () => {\n  const [modesList, setModesList] = useState({});\n  const [isStarted, setIsStarted] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [squaresCount, setSquaresCount] = useState(0);\n  const [isModeSelected, setIsModeSelected] = useState(false);\n\n  useEffect(async() => {\n    const modes = await loadModes();\n\n    setModesList(modes);\n    setIsLoaded(true);\n  }, []);\n\n  const handleStart = () => {\n    setIsStarted(true);\n  };\n\n  const onChangeSelect = (e) => {\n    const { value } = e.target;\n\n    setIsModeSelected(true);\n    setSquaresCount(+value);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n        {isLoaded === true ? (\n          <>\n            <Header\n              modesList={modesList}\n              handleStart={handleStart}\n              isStarted={isStarted}\n              onChangeSelect={onChangeSelect}\n              isModeSelected={isModeSelected}\n            />\n            {isStarted\n              && (\n                <Field\n                  squaresCount={squaresCount}\n                />\n              )}\n          </>\n        )\n          : <p className=\"App__loading\">Loading...</p>\n        }\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}